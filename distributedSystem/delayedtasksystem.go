package main

/** 做系统时很多都是处理实时任务,请求来了马上处理,然后立刻反馈给用户.但有时也会遇到非实时任务,比如确定的时候点发布重要
公告.或需要用户做了一件事件的X分钟/Y小时后对其特定运作,比如通知,发券等等.
如果业务规模较小,我们可以通过数据库配合轮询来对这种任务简单处理.但上了规模的公司,会寻找更加适合普遍的解决方案
一般是两种思路来解决这样的问题
1.实现一套类似crontab的分布式定时任务管理系统
2. 实现一个支持定时发送消息的消息队列.
两种思路的本质差不多,都是需要实现一个定时器(Timer).单机场景下定时器很常见,例如我们在和网络库打交道时经常会调用
setReadDeadline()函数,这就是在本地创建了一个定时器,到达指定时间后,我们会收到定时器的通知,告诉我们时间已到.如果这时读取
还未完成就可以认为发生了网络问题从而主动中断读取.
*  @Author <a href="mailto:gisonwin@qq.com">GisonWin</a>
*  @Date  2020/7/3 0:22
 */